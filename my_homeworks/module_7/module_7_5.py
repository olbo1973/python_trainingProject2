# Задание по теме "Файлы в операционной системе"
### Работа кода:

# 1. **Импорт библиотек**:
#    - `import os`: импортируется модуль `os`, который предоставляет функционал для работы с файловой системой.
#    - `import time`: импортируется модуль `time`, который предоставляет функции для работы с временем.
#
# 2. **Пустой вывод**:
#    - `print()`: используется для вывода пустой строки перед началом, что может быть полезно для визуального
#    разделения вывода.
#
# 3. **Обход директории**:
#    - `directory = "."`: указывает, что обход будет производиться в текущей директории.
#    - `for root, dirs, files in os.walk(directory)`: использует функцию `os.walk` для рекурсивного обхода всей
#    директории и её поддиректорий, возвращая путь к текущей директории (`root`), имена поддиректорий (`dirs`) и
#    имена файлов (`files`).
#
# 4. **Получение и форматирование информации о файлах**:
#    - `file_path = os.path.join(root, file)`: создает полный путь к файлу, объединяя `root` и имя файла.
#    - `file_time = os.path.getmtime(file_path)`: получает время последнего изменения файла в формате
#    timestamp (время в секундах).
#    - `formatted_time = time.strftime("%d.%m.%Y %H:%M", time.localtime(file_time))`: форматирует время в удобный для
#    чтения формат (день.месяц.год часы:минуты).
#    - `file_size = os.path.getsize(file_path)`: получает размер файла в байтах.
#    - `parent_dir = os.path.dirname(file_path)`: определяет родительскую директорию файла.
#
# 5. **Вывод информации**:
#    - `print(...)`: выводит всю собранную информацию о файле, включая имя, путь, размер, время изменения и
#    родительскую директорию.

import os
import time

# Печатаем пустую строку для разделения вывода.
print()

# Указываем директорию для обхода (в данном случае - текущая директория).
directory = "."

# Рекурсивно обходим директорию и её поддиректории.
for root, dirs, files in os.walk(directory):
    for file in files:
        # Формируем полный путь к файлу.
        file_path = os.path.join(root, file)

        try:
            # Получаем время последнего изменения файла.
            file_time = os.path.getmtime(file_path)
            # Форматируем время в удобочитаемый вид.
            formatted_time = time.strftime("%d.%m.%Y %H:%M", time.localtime(file_time))
            # Получаем размер файла в байтах.
            file_size = os.path.getsize(file_path)
            # Получаем родительскую директорию файла.
            parent_dir = os.path.dirname(file_path)

            # Выводим информацию о файле.
            print(f'Обнаружен файл: {file}, Путь: {file_path}, Размер: {file_size} байт, '
                  f'Время изменения: {formatted_time}, Родительская директория: {parent_dir}')
        except Exception as e:
            print(f'Не удалось получить информацию о файле: {file_path}. Ошибка: {e}')