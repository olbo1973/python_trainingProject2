## Домашнее задание по теме "Декораторы"

def is_prime(func):
    # Декоратор is_prime, который проверяет, является ли результат функции простым числом
    def wrapper(*args):
        # Внутренняя функция wrapper, которая принимает произвольное количество аргументов
        result = func(*args)  # Вызов оригинальной функции и получение результата
        if result < 2:
            # Все числа меньше 2 являются составными
            print("Составное")
        else:
            # Проверка на простоту для чисел >= 2
            for i in range(2, int(result**0.5) + 1):
                # Проверка делимости числа на все натуральные числа до его квадратного корня
                if result % i == 0:
                    # Если найден делитель, число составное
                    print("Составное")
                    break
            else:
                # Если делителей не найдено, число простое
                print("Простое")
        return result  # Возвращаем результат оригинальной функции

    return wrapper  # Возвращаем функцию wrapper как декоратор

@is_prime  # Применяем декоратор is_prime к функции sum_three
def sum_three(a, b, c):
    # Функция для сложения трех чисел
    return a + b + c

# Пример использования декорированной функции
result = sum_three(2, 3, 6)  # Вызов функции и получение результата
print(result)  # Печать результата сложения